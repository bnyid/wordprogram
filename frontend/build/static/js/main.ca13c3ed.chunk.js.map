{"version":3,"sources":["images/logo.png","redux/modules/words.js","redux/configureStore.js","components/Main/presenter.js","components/Main/container.js","components/Main/index.js","components/Detail/presenter.js","components/Detail/container.js","components/Detail/index.js","components/App/presenter.js","components/App/container.js","components/App/index.js","index.js","components/Detail/styles.module.scss","components/Main/styles.module.scss"],"names":["module","exports","initialState","applySetWord","state","action","word","applySetImgurl","imgurl","applySetTestInfo","testinfo","applySetStatus","status","applySetStatusCode","statuscode","applySetClassList","classlist","applySetStudentInfo","studentinfo","applySetStudentList","studentlist","applySetTestList","testlist","applySetBookList","booklist","actionCreators","getTestInfo","uuid","dispatch","getState","fetch","then","response","json","type","catch","err","console","log","getStudentList","id","getTestList","getClassList","getStudentInfo","setStudentBigo","bigo","method","headers","body","JSON","stringify","getBookList","makeTest","start_day","end_day","percent","book_name","getImgurl","setFailWord","deleteTest","reducer","history","createHistory","middlewares","thunk","routerMiddleware","combineReducers","words","i18nState","router","connectRouter","store","createStore","applyMiddleware","TestButton","props","context","className","styles","headerrowred","test","bodys","Main","main","top","src","require","logo","alt","info","line","length","test_date","student","name","testtable","result","headerrow","headerd","headern","headerw","map","index","Container","text","test_words","componentWillReceiveProps","nextProps","setState","n","i","document","getElementById","innerText","day","word_eng","onKeyPress","e","target","value","key","x","push","this","pathname","split","Component","connect","ownProps","location","wordsActions","Stdli","stduuid","std","onClick","stdlired","birth","stdli","delete","printImage","test_words_count","test2","customStyles","content","left","right","bottom","marginRight","transform","Detail","loadingpage","imgok","alram","color","height","width","isOpen","onRequestClose","closeModal","style","contentLabel","hrsect","box","onChange","handle","selectbox","book","inputbox","defaultValue","stdinfo","makeTestClick","rbtn","isOpen2","closeModal2","inputbox2","hrtext","front","back","mainbox","topbox","toptopbox","infotitle","infotext","onsaveClick","topbottombox","leftbox","testlistloading","data","onToggle","rightbox","stdlist","middlebox","btnbox","openModal2","newbtn2","openModal","newbtn","header","test_day","cnt","noselect","selectedDay","selectedDate","selectbook","selectcnt","deleteflag","testuuid","error","win","window","open","setTimeout","print","close","setSelectedDay","toISOString","alert","currentTarget","bind","node","toggled","cursor","active","children","PublicRoutes","path","component","withRouter","ReactDOM","render","Helmet","data-react-helmet"],"mappings":"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","file":"static/js/main.ca13c3ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.69d943d4.png\";","const SET_STUDENTLIST = \"SET_STUDENTLIST\";\r\nconst SET_TESTLIST = \"SET_TESTLIST\";\r\nconst SET_CLASSLIST = \"SET_CLASSLIST\";\r\nconst SET_STUDENTINFO = \"SET_STUDENTINFO\";\r\nconst SET_BOOKLIST = \"SET_BOOKLIST\";\r\nconst SET_STATUSCODE = \"SET_STATUSCODE\";\r\nconst SET_TESTINFO = \"SET_TESTINFO\";\r\nconst SET_IMGURL = \"SET_IMGURL\";\r\nconst SET_WORD = \"SET_WORD\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nfunction setStatus(status){\r\n  return{\r\n    type : SET_STATUS,\r\n    status,\r\n  };\r\n}\r\nfunction setWord(word){\r\n  return{\r\n    type : SET_WORD,\r\n    word,\r\n  };\r\n}\r\nfunction setImgurl(imgurl) {\r\n  return {\r\n    type: SET_IMGURL,\r\n    imgurl\r\n  };\r\n}\r\nfunction setStatusCode(statuscode) {\r\n  return {\r\n    type: SET_STATUSCODE,\r\n    statuscode\r\n  };\r\n}\r\nfunction setStudentList(studentlist) {\r\n  return {\r\n    type: SET_STUDENTLIST,\r\n    studentlist\r\n  };\r\n}\r\nfunction setTestList(testlist) {\r\n  return {\r\n    type: SET_TESTLIST,\r\n    testlist\r\n  };\r\n}\r\nfunction setStudentInfo(studentinfo) {\r\n  return {\r\n    type: SET_STUDENTINFO,\r\n    studentinfo\r\n  };\r\n}\r\nfunction setClassList(classlist) {\r\n  return {\r\n    type: SET_CLASSLIST,\r\n    classlist\r\n  };\r\n}\r\nfunction setBookList(booklist) {\r\n  return {\r\n    type: SET_BOOKLIST,\r\n    booklist\r\n  };\r\n}\r\nfunction setTestInfo(testinfo) {\r\n  return {\r\n    type: SET_TESTINFO,\r\n    testinfo\r\n  };\r\n}\r\n// API Actions\r\nfunction deleteTest(uuid) {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/deletetest/?uuid=\"+uuid, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setStatus(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction getImgurl(uuid) {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/makeexcelandimg/?uuid=\"+uuid, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setImgurl(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction getTestInfo(uuid) {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/test/?uuid=\"+uuid, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setTestInfo(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction getStudentList(id) {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/classperson/?id=\"+id, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setStudentList(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getTestList(uuid) {\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/getstdtest/?uuid=\"+uuid, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setTestList(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction setStudentBigo(bigo,uuid) {\r\n  return (dispatch, getState ) => {\r\n      fetch(\"/words/setpersonbigo/\",{\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n              \"uuid\" : uuid,\r\n              \"bigo\" : bigo\r\n          })\r\n      })\r\n      .then(response => {\r\n        return response;\r\n      })\r\n  }\r\n}\r\nfunction setFailWord(uuid,id) {\r\n  return (dispatch, getState ) => {\r\n      fetch(\"/words/failWordRegister/\",{\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n              \"uuid\" : uuid,\r\n              \"fail_word\" : id\r\n          })\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setWord(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n}\r\nfunction makeTest(uuid,start_day,end_day,percent,book_name){\r\n  return (dispatch, getState ) => {\r\n    fetch(\"/words/maketest/\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            \"uuid\" : uuid,\r\n            \"start_day\" : start_day,\r\n            \"end_day\" : end_day,\r\n            \"cnt\" : percent,\r\n            \"book_name\" : book_name,\r\n        })\r\n    })\r\n    .then(response => {\r\n      return response.status;\r\n    }) .then(status => {\r\n      dispatch(setStatusCode(status));\r\n    })\r\n}\r\n}\r\n\r\nfunction getBookList(){\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/bookname/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setBookList(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getClassList(){\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/class/\", {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setClassList(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\nfunction getStudentInfo(uuid){\r\n  return (dispatch, getState) => {\r\n    fetch(\"/words/info/?id=\"+uuid, {\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setStudentInfo(json));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n// Initial State\r\n\r\nconst initialState = {};\r\n\r\n// Reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_STUDENTLIST:\r\n      return applySetStudentList(state, action);\r\n    case SET_TESTLIST:\r\n      return applySetTestList(state, action);\r\n    case SET_CLASSLIST:\r\n        return applySetClassList(state, action);\r\n    case SET_STUDENTINFO:\r\n      return applySetStudentInfo(state, action);\r\n    case SET_BOOKLIST:\r\n      return applySetBookList(state, action);\r\n    case SET_STATUSCODE:\r\n      return applySetStatusCode(state, action);\r\n    case SET_TESTINFO:\r\n      return applySetTestInfo(state, action);\r\n    case SET_IMGURL:\r\n      return applySetImgurl(state, action);\r\n    case SET_WORD:\r\n      return applySetWord(state,action);\r\n    case SET_STATUS:\r\n      return applySetStatus(state,action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// Reducer Functions\r\nfunction applySetWord(state, action) {\r\n  const { word } = action;\r\n  return {\r\n    ...state,\r\n    word\r\n  };\r\n}\r\nfunction applySetImgurl(state, action) {\r\n  const { imgurl } = action;\r\n  return {\r\n    ...state,\r\n    imgurl\r\n  };\r\n}\r\nfunction applySetTestInfo(state, action) {\r\n  const { testinfo } = action;\r\n  return {\r\n    ...state,\r\n    testinfo\r\n  };\r\n}\r\nfunction applySetStatus(state, action) {\r\n  const { status } = action;\r\n  return {\r\n    ...state,\r\n    status\r\n  };\r\n}\r\nfunction applySetStatusCode(state, action) {\r\n  const { statuscode } = action;\r\n  return {\r\n    ...state,\r\n    statuscode\r\n  };\r\n}\r\nfunction applySetClassList(state, action) {\r\n  const { classlist } = action;\r\n  return {\r\n    ...state,\r\n    classlist\r\n  };\r\n}\r\nfunction applySetStudentInfo(state, action) {\r\n  const { studentinfo } = action;\r\n  return {\r\n    ...state,\r\n    studentinfo\r\n  };\r\n}\r\nfunction applySetStudentList(state, action) {\r\n  const { studentlist } = action;\r\n  return {\r\n    ...state,\r\n    studentlist\r\n  };\r\n}\r\nfunction applySetTestList(state, action) {\r\n  const { testlist } = action;\r\n  return {\r\n    ...state,\r\n    testlist\r\n  };\r\n}\r\nfunction applySetBookList(state, action) {\r\n  const { booklist } = action;\r\n  return {\r\n    ...state,\r\n    booklist\r\n  };\r\n}\r\nconst actionCreators = {\r\n  getTestInfo,\r\n  getStudentList,\r\n  getTestList,\r\n  getClassList,\r\n  getStudentInfo,\r\n  setStudentBigo,\r\n  getBookList,\r\n  makeTest,\r\n  getImgurl,\r\n  setFailWord,\r\n  deleteTest,\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// Export reducer by default\r\n\r\nexport default reducer;","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport {routerMiddleware } from 'connected-react-router'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { connectRouter } from 'connected-react-router'\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport thunk from \"redux-thunk\";\r\nimport words from \"redux/modules/words\";\r\nimport { i18nState } from \"redux-i18n\";\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nconst history = createHistory();\r\n\r\nconst middlewares = [thunk, routerMiddleware(history)];\r\n\r\nconsole.log(history)\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    words,\r\n  i18nState,\r\n  router: connectRouter(history)\r\n});\r\n\r\nlet store;\r\n\r\nif (env === \"development\") {\r\n  store = initialState =>\r\n    createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\r\n} else {\r\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\r\n}\r\n\r\nexport { history };\r\n\r\nexport default store();","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Router,Link } from \"react-router-dom\";\r\nimport styles from \"./styles.module.scss\";\r\nconst Main = (props, context) => (\r\n  <div className={styles.main}>\r\n    <div className={styles.top}>\r\n      <img\r\n          src={require(\"../../images/logo.png\")}\r\n          className={styles.logo}\r\n          alt={\"Logo\"}\r\n      />\r\n      <div className={styles.info}>\r\n        <div className={styles.line}>\r\n          DAY  : \r\n          {props.test.length!=0 && props.test.start_day}\r\n          ~\r\n          {props.test.length!=0 && props.test.end_day}\r\n        </div>\r\n        <div className={styles.line}>\r\n          테스트 날짜 : \r\n          {props.test.length!=0 && props.test.test_date}\r\n        </div>\r\n        <div className={styles.line}>\r\n          이름 : {props.test.length!=0 && props.test.student.name}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      \r\n    <div className={styles.testtable}>\r\n      <table className={styles.result}>\r\n          <tr className={styles.headerrow}>\r\n            <th className={styles.headerd}>\r\n              DAY\r\n            </th>\r\n            <th className={styles.headern}>\r\n              NO\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              WORD\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              CHECK\r\n            </th>\r\n          </tr>\r\n          <>\r\n          {props.testtable.map((word,index) =>\r\n          <TestButton {...props} index={index}  test={0}  word={word}/>\r\n          )}\r\n          </>\r\n      </table>\r\n      <table className={styles.result}>\r\n          <tr className={styles.headerrow}>\r\n            <th className={styles.headerd}>\r\n              DAY\r\n            </th>\r\n            <th className={styles.headern}>\r\n              NO\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              WORD\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              CHECK\r\n            </th>\r\n          </tr>\r\n          <>\r\n          {props.testtable.map((word,index) =>\r\n          <TestButton {...props} index={index}  test={1} word={word}/>\r\n          )}\r\n          </>\r\n      </table>\r\n      <table className={styles.result}>\r\n          <tr className={styles.headerrow}>\r\n            <th className={styles.headerd}>\r\n              DAY\r\n            </th>\r\n            <th className={styles.headern}>\r\n              NO\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              WORD\r\n            </th>\r\n            <th className={styles.headerw}>\r\n              CHECK\r\n            </th>\r\n          </tr>\r\n          <>\r\n          {props.testtable.map((word,index) =>\r\n          <TestButton {...props} index={index}  test={2}  word={word}/>\r\n          )}\r\n          </>\r\n      </table>\r\n    </div>\r\n    \r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nconst TestButton = (props,context) => (\r\n  <>\r\n    { (\r\n      <tr className={styles.headerrowred}>\r\n      <td id={\"day\"+(props.word + 35*props.test)}  className={styles.bodys}>\r\n        \r\n      </td>\r\n      <td id={\"no\"+(props.word + 35*props.test)} className={styles.bodys}>\r\n      </td>\r\n      <td id={\"word\"+ (props.word + 35*props.test)} className={styles.bodys}>\r\n      </td>\r\n      <td   className={styles.bodys}>\r\n\r\n      </td>\r\n    </tr>\r\n    )}\r\n    \r\n  </>\r\n)\r\n\r\nMain.propTypes = {\r\n  onKeyPress:PropTypes.func.isRequired,\r\n  test_words : PropTypes.array.isRequired,\r\n  student : PropTypes.array.isRequired,\r\n  testtable:PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Main;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Main from \"./presenter\";\r\n\r\nclass Container extends Component {\r\n  state = {\r\n    text : \"\",\r\n    test_words : [],\r\n    student : [],\r\n    test : [],\r\n    testtable : [],\r\n  };\r\n  \r\n  static propTypes = {\r\n    testinfo : PropTypes.array.isRequired,\r\n    pathname : PropTypes.array.isRequired,\r\n    getTestInfo : PropTypes.func.isRequired\r\n  };\r\n  \r\n  componentWillReceiveProps = nextProps => {\r\n    if(nextProps.testinfo){\r\n      this.setState({\r\n        test : nextProps.testinfo\r\n      })\r\n      var n = 105;\r\n      if(nextProps.testinfo.test_words.length<105){\r\n        n = nextProps.testinfo.test_words.length\r\n      }\r\n      for(var i=0;i<n;i++){\r\n        document.getElementById(\"day\"+i).innerText  = nextProps.testinfo.test_words[i].day\r\n        document.getElementById(\"no\"+i).innerText  = nextProps.testinfo.test_words[i].id\r\n        document.getElementById(\"word\"+i).innerText = nextProps.testinfo.test_words[i].word_eng\r\n      }\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    var x= [];\r\n    for (var i = 0; i < 35; i++) {\r\n      x.push(i)\r\n    }\r\n    this.setState({\r\n      testtable : x\r\n    })\r\n    console.log(this.state.testtable);\r\n    const {pathname,getTestInfo} = this.props;\r\n    getTestInfo(pathname.split('test/')[1]);\r\n  };\r\n  onKeyPress = (e) =>{\r\n    const {getStudentList } = this.props;\r\n    this.setState({\r\n      text : e.target.value\r\n    })\r\n    if(e.key==='Enter'){\r\n      getStudentList(e.target.value);\r\n    }\r\n  }\r\n  render() {\r\n  \r\n    return (\r\n      <Main {...this.state} onKeyPress={this.onKeyPress} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","import { connect } from \"react-redux\";\r\nimport Container from \"./container\";\r\nimport { actionCreators as wordsActions } from \"../../redux/modules/words\"\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { words:{testinfo}, router: { location } } = state;\r\n  return {\r\n    testinfo,\r\n    pathname: location.pathname\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getTestInfo: (uuid) => {\r\n      dispatch(wordsActions.getTestInfo(uuid));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Router,Link } from \"react-router-dom\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport {Treebeard} from 'react-treebeard';\r\nimport Modal from 'react-modal';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport ReactLoading from 'react-loading';\r\nconst footer = (\r\n  <p>날짜를 선택해주세요</p>\r\n);\r\nconst Detail = (props, context) => (\r\n \r\n  <div className={styles.main}>\r\n    <>\r\n      <div className={styles.loadingpage}>\r\n        {(props.imgok || props.alram)  && (<ReactLoading type={\"spinningBubbles\"} color={\"black\"} height={'200px'} width={'200px'} />)}\r\n      </div>\r\n    </>\r\n    {!props.imgok && (\r\n    <>\r\n    <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={props.closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div  className={styles.hrsect}>책을 선택해주세요</div>\r\n        <div className={styles.box}>\r\n        <select name=\"selectbook\" onChange={props.handle} className={styles.selectbox}>\r\n          {props.booklist.length!=0 && props.booklist.map((book,index) =>\r\n             <option value={book.name}>{book.name}</option>\r\n            )}\r\n            \r\n        </select>\r\n        </div>\r\n        <div  className={styles.hrsect}>시작 날짜와 끝날짜를 입력해주세요</div>\r\n        <div className={styles.box}>\r\n        <input name=\"start_day\" onChange={props.handle} className={styles.inputbox} defaultValue={props.start_day}/>\r\n        <div> ~ </div>\r\n        <input name=\"end_day\" onChange={props.handle} className={styles.inputbox} defaultValue={props.end_day}/>\r\n        </div>\r\n        <div className={styles.hrsect}>출제 비율을 선택해주세요</div>\r\n        <div className={styles.box}>\r\n        <select name=\"selectcnt\" onChange={props.handle} className={styles.selectbox}>\r\n          <option value={100}>100%</option>\r\n          <option value={75}>75%</option>\r\n          <option value={50}>50%</option>\r\n        </select>\r\n        </div>\r\n        <button id={props.stdinfo!=[] && props.stdinfo.uuid}  onClick={props.makeTestClick} className={styles.rbtn}>\r\n          테스트 만들기\r\n        </button>\r\n\r\n    </Modal>\r\n    <Modal\r\n        isOpen={props.isOpen2}\r\n        onRequestClose={props.closeModal2}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div  className={styles.hrsect}>틀린 단어의 id를 입력 및 엔터 입력</div>\r\n        <input id=\"failword\" onKeyPress={props.onKeyPress} name=\"id\" onChange={props.handle} className={styles.inputbox2} defaultValue={props.id}/>\r\n        <div  className={styles.hrtext}>{!props.word==\"\" && (\r\n          <>\r\n          {props.word} 등록 완료\r\n          </>\r\n        )}</div>\r\n    </Modal>\r\n    <div className={styles.logo}>\r\n      <div className={styles.text}>\r\n        <div className={styles.front}>\r\n          B & Y\r\n        </div>\r\n        <div className={styles.back}>\r\n          ENGLISH\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className={styles.mainbox}>\r\n      <div className={styles.topbox}>\r\n        <div className={styles.toptopbox}>\r\n          <div className={styles.box}>\r\n            <div className={styles.infotitle}>학생 정보</div>\r\n            <div className={styles.infotext}>이름 : {props.stdinfo!=[] && props.stdinfo.name}</div>\r\n            <textarea name=\"text\" onChange={props.handle} id=\"textarea\" className={styles.bigo} />\r\n            <button onClick={props.onsaveClick} id={props.stdinfo!=[] && props.stdinfo.uuid} className={styles.rbtn}>\r\n              저장\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={styles.topbottombox}>\r\n\r\n              \r\n          <div className={styles.leftbox}>\r\n            {!props.testlistloading && (\r\n              <>\r\n                <Treebeard\r\n                      data={props.data}\r\n                      onToggle={props.onToggle}\r\n                  />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={styles.rightbox}>\r\n            {props.stdlist.length==0 && (\r\n              <ul>\r\n                <li>\r\n                  왼쪽에서 학생을 선택해주세요\r\n                </li>\r\n              </ul>\r\n            )}\r\n            {props.stdlist.length!=0 && (\r\n              <ul>\r\n                {props.stdlist.map((std,index) =>\r\n                <Stdli {...props} std={std}/>\r\n                )}\r\n              </ul>\r\n            )}\r\n          \r\n        </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.middlebox}>\r\n        <div className={styles.box}>\r\n          <div className={styles.btnbox}>\r\n          <button onClick={props.openModal2}className={styles.newbtn2}>\r\n            틀린 문제 등록\r\n          </button>\r\n          <button onClick={props.openModal}className={styles.newbtn}>\r\n            새로운 시험지 만들기\r\n          </button>\r\n          </div>\r\n          <table className={styles.result}>\r\n              <tr className={styles.headerrow}>\r\n                <th className={styles.header}>\r\n                  삭제\r\n                </th>\r\n                <th className={styles.header}>\r\n                  과정\r\n                </th>\r\n                <th className={styles.header}>시험날짜\r\n                </th>\r\n                <th className={styles.header}>DAY\r\n                </th>\r\n                <th className={styles.header}>문제수\r\n                </th>\r\n                <th className={styles.header}>시험회차\r\n                </th>\r\n                <th className={styles.header}>복습회차\r\n                </th>\r\n              </tr>\r\n              {props.testlist.length!=0 && (\r\n                  <>\r\n                  {props.testlist.map((test,index) =>\r\n                  <TestButton {...props} test2={props.testlist.length} index={index} test={test}/>\r\n                  )}\r\n                  </>\r\n              )}\r\n          </table>\r\n         \r\n        </div>\r\n        \r\n        \r\n      </div>\r\n    </div>\r\n    </>\r\n    )}\r\n  </div>\r\n  \r\n);\r\nconst Stdli= (props,context) => (\r\n  <>\r\n  {props.stduuid == props.std.uuid && (\r\n    <li onClick={\r\n        props.onClick} className={styles.stdlired} id={props.std.uuid}>\r\n        {props.std.name} {props.std.birth}\r\n    </li>\r\n  )\r\n  }\r\n  {props.stduuid != props.std.uuid && (\r\n    <li onClick={\r\n        props.onClick} className={styles.stdli} id={props.std.uuid}>\r\n        {props.std.name} {props.std.birth}\r\n    </li>\r\n  )\r\n  }\r\n    \r\n  </>\r\n)\r\nconst TestButton = (props,context) => (\r\n  <>\r\n    {(props.index==0 || props.index==2 || props.index== 4 || props.index== 8) && (\r\n      <tr className={styles.headerrowred}>\r\n      <td onClick={(e) => props.delete(props.test.uuid)} className={styles.bodys}>\r\n        삭제\r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>\r\n        {props.test.book_name} \r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.test_date}\r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.start_day} ~ {props.test.end_day}\r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.test_words_count}\r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test2-props.index}\r\n      </td>\r\n      <td  onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.index}\r\n      </td>\r\n    </tr>\r\n    )}\r\n     {!(props.index==0 || props.index==2 || props.index== 4 || props.index== 8)  && (\r\n      <tr  className={styles.headerrow}>\r\n      <td onClick={(e) => props.delete(props.test.uuid)} className={styles.bodys}>\r\n        삭제\r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>\r\n        {props.test.book_name} \r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.test_date}\r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.start_day} ~ {props.test.end_day}\r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test.test_words_count}\r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.test2-props.index}\r\n      </td>\r\n      <td onClick={(e) => props.printImage(props.test.uuid)} className={styles.bodys}>{props.index+1}\r\n      </td>\r\n    </tr>\r\n    )}\r\n    \r\n  </>\r\n)\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nDetail.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  testlistloading : PropTypes.bool.isRequired,\r\n  onToggle : PropTypes.func.isRequired,\r\n  onClick:PropTypes.func.isRequired,\r\n  onsaveClick:PropTypes.func.isRequired,\r\n  handle:PropTypes.func.isRequired,\r\n  noselect : PropTypes.func.isRequired,\r\n  stdlist : PropTypes.object.isRequired,\r\n  delete :  PropTypes.func.isRequired,\r\n  stdinfo : PropTypes.object.isRequired,\r\n  testlist :  PropTypes.object.isRequired,\r\n  openModal : PropTypes.func.isRequired,\r\n  closeModal : PropTypes.func.isRequired,\r\n  openModal2 : PropTypes.func.isRequired,\r\n  closeModal2 : PropTypes.func.isRequired,\r\n  isOpen : PropTypes.bool.isRequired,\r\n  isOpen2 : PropTypes.bool.isRequired,\r\n  booklist :  PropTypes.bool.isRequired,\r\n  setSelectedDay : PropTypes.func.isRequired,\r\n  selectedDay : PropTypes.element.isRequired,\r\n  start_day : PropTypes.number.isRequired,\r\n  end_day : PropTypes.number.isRequired,\r\n  makeTestClick: PropTypes.func.isRequired,\r\n  printImage:PropTypes.func.isRequired,\r\n  imgok : PropTypes.bool.isRequired,\r\n  alram :  PropTypes.bool.isRequired,\r\n  stduuid : PropTypes.string.isRequired,\r\n};\r\nStdli.propTypes = {\r\n  std: PropTypes.array.isRequired,\r\n  stduuid : PropTypes.string.isRequired,\r\n};\r\nTestButton.propTypes = {\r\n  test : PropTypes.array.isRequired,\r\n  test2 : PropTypes.number.isRequired,\r\n  index : PropTypes.number.isRequired\r\n};\r\nexport default Detail;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Detail from \"./presenter\";\r\nimport Main from \"../Main/presenter\";\r\nclass Container extends Component {\r\n  state = {\r\n    text : \"\",\r\n    start_day : 1,\r\n    end_day : 5,\r\n    test_day : 0,\r\n    cnt : 100,\r\n    testlistloading:true,\r\n    alram : false,\r\n    data : {\r\n    \r\n    },\r\n    stdlist : [\r\n\r\n    ],\r\n    stdinfo : [\r\n\r\n    ],\r\n    testlist : [\r\n\r\n    ],  \r\n    booklist : [\r\n\r\n    ],\r\n    noselect : true,\r\n    isOpen : false,\r\n    isOpen2 : false,\r\n    selectedDay: null,\r\n    selectedDate: \"\",\r\n    selectbook : \"\",\r\n    selectcnt : 100,\r\n    stduuid : \"\",\r\n    imgok : false,\r\n    id : \"\",\r\n    word : \"\",\r\n    deleteflag : false,\r\n    testuuid : \"\",\r\n  };\r\n  static propTypes = {\r\n    getTestList : PropTypes.func.isRequired,\r\n    getClassList : PropTypes.func.isRequired,\r\n    getStudentList : PropTypes.func.isRequired,\r\n    getStudentInfo : PropTypes.func.isRequired,\r\n    getImgurl: PropTypes.func.isRequired,\r\n    setStudentBigo : PropTypes.func.isRequired,\r\n    getBookList : PropTypes.func.isRequired,\r\n    pathname:PropTypes.string.isRequired,\r\n    testlist: PropTypes.array.isRequired,\r\n    classlist: PropTypes.array.isRequired,\r\n    studentlist: PropTypes.array.isRequired,\r\n    booklist : PropTypes.array.isRequired,\r\n    studentinfo: PropTypes.array.isRequired,\r\n    makeTest : PropTypes.array.isRequired,\r\n    deleteTest : PropTypes.func.isRequired,\r\n    imgurl : PropTypes.string.isRequired,\r\n    setFailWord: PropTypes.func.isRequired,\r\n  };\r\n  constructor(props){\r\n    super(props);\r\n    this.onToggle = this.onToggle.bind(this);\r\n  }\r\n  onKeyPress = (e) =>{\r\n    const {setFailWord } = this.props;\r\n    if(e.key==='Enter'){\r\n      setFailWord(this.state.stduuid,e.target.value);\r\n      try{\r\n        this.setState({\r\n          stduuid : '',\r\n        })\r\n        document.getElementById(\"failword\").value = \"\";\r\n      }\r\n      catch (error) {\r\n      }\r\n    }\r\n  }\r\n  openModal= (e) =>  {\r\n    this.setState(() => (\r\n      {\r\n        isOpen: true,\r\n      }\r\n    ))\r\n  }\r\n  openModal2= (e) =>  {\r\n    this.setState(() => (\r\n      {\r\n        isOpen2: true,\r\n      }\r\n    ))\r\n  }\r\n  delete = (uuid) => {\r\n    const {deleteTest} = this.props;\r\n    this.setState({\r\n      deleteflag : true\r\n    })\r\n    deleteTest(uuid);\r\n  }\r\n  printImage = (uuid) => {\r\n    const {getImgurl} = this.props;\r\n    var win = window.open(\"/test/\"+uuid);\r\n        setTimeout(function() {\r\n          win.print();\r\n          win.close();\r\n      }, 700);\r\n  }\r\n  setSelectedDay = (day) => {\r\n    \r\n    this.setState(() => (\r\n      {\r\n        selectedDay: day,\r\n        selectedDate : day.toISOString()\r\n      }\r\n    ))\r\n     \r\n  }\r\n  closeModal= (e) => {\r\n    this.setState(() => (\r\n      {\r\n        isOpen: false,\r\n      }\r\n    ))\r\n  }\r\n  closeModal2= (e) => {\r\n    this.setState(() => (\r\n      {\r\n        isOpen2: false,\r\n      }\r\n    ))\r\n  }\r\n  onToggle(node, toggled){\r\n    const {cursor, data} = this.state;\r\n    const {getStudentList} = this.props;\r\n    getStudentList(node.id);\r\n    if (cursor) {\r\n        this.setState(() => ({cursor, active: false}));\r\n    }\r\n    \r\n    if (node.children) { \r\n        node.toggled = toggled; \r\n    }\r\n    this.setState(() => ({cursor: node, data: data}));\r\n}\r\n  componentWillReceiveProps = nextProps => {\r\n    const{getTestList} = this.props;\r\n    if(nextProps.imgurl){\r\n      if(this.state.imgok==true){\r\n        this.setState({\r\n          imgok : false,\r\n        })\r\n        var win = window.open(\"/test/\"+this.state.testuuid);\r\n        setTimeout(function() {\r\n          win.print();\r\n          win.close();\r\n      }, 250);\r\n        /*\r\n        win.document.write('<html lang=\"jp\"><head>');\r\n        win.document.write('<meta charset=\"UTF-8\">');\r\n        win.document.write('')\r\n        win.document.write('</head><body>');\r\n        win.document.write('</body></html>');\r\n        win.document.close();\r\n        var oImg = document.createElement(\"img\");\r\n        oImg.setAttribute('src', nextProps.imgurl.url);\r\n        oImg.style.width = \"100%\";\r\n        win.document.body.appendChild(oImg);\r\n        document.margin = \"11mm 17mm 17mm 17mm\";\r\n        */\r\n        setTimeout(function() {\r\n            win.print();\r\n            win.close();\r\n        }, 250);\r\n      }\r\n    }\r\n    if(nextProps.classlist){\r\n      this.setState({\r\n        data : nextProps.classlist,\r\n        testlistloading:false\r\n      })\r\n    }\r\n    if(nextProps.studentlist){\r\n      this.setState({\r\n        stdlist : nextProps.studentlist,\r\n      })\r\n    }\r\n    if(nextProps.studentinfo){\r\n      this.setState({\r\n        stdinfo: nextProps.studentinfo,\r\n        text : nextProps.studentinfo.bigo,\r\n      })\r\n      try{\r\n        document.getElementById(\"textarea\").value = nextProps.studentinfo.bigo;\r\n      }\r\n      catch (error) {\r\n      }\r\n    }\r\n    if(nextProps.testlist){\r\n      try{\r\n        this.setState({\r\n          testlist: nextProps.testlist,\r\n          start_day : nextProps.testlist[0].end_day + 1,\r\n          end_day : nextProps.testlist[0].end_day + 3\r\n        })\r\n      }\r\n      catch(e){\r\n        this.setState({\r\n          testlist: nextProps.testlist,\r\n        })\r\n      }\r\n      \r\n    }\r\n    if(nextProps.booklist){\r\n      this.setState({\r\n        booklist: nextProps.booklist,\r\n        selectbook : nextProps.booklist[0].name\r\n      })\r\n    }\r\n    if(nextProps.status){\r\n      if(this.state.deleteflag==true){\r\n        this.setState({\r\n          deleteflag : false\r\n        })\r\n        console.log(nextProps.status.status)\r\n        if(nextProps.status.status==\"delete\"){\r\n          getTestList(this.state.stduuid)\r\n        }\r\n      }\r\n    }\r\n    if(nextProps.word){\r\n      this.setState({\r\n        word : nextProps.word\r\n      })\r\n    }\r\n    if(nextProps.statuscode){\r\n      if(this.state.alram==true){\r\n        if(nextProps.statuscode==201){\r\n          alert(\"테스트 생성 완료\")\r\n          getTestList(this.state.stduuid)\r\n        }\r\n        if(nextProps.statuscode!=201){\r\n          alert(\"테스트 생성 실패\")\r\n        }\r\n        this.setState({\r\n          alram: false,\r\n        })\r\n      }\r\n    }\r\n  };\r\n  \r\n  componentDidMount() {\r\n    const{getClassList,getBookList} = this.props;\r\n    getClassList();\r\n    getBookList();\r\n  };\r\n  onClick = (e) =>{\r\n    const{getStudentInfo} = this.props;\r\n    getStudentInfo(e.currentTarget.id);\r\n    this.setState({\r\n      \"stduuid\" : e.currentTarget.id\r\n    }\r\n    )\r\n    const {getTestList} = this.props;\r\n    getTestList(e.currentTarget.id)\r\n  }\r\n  onsaveClick = (e) =>{\r\n    const {setStudentBigo} = this.props;\r\n    setStudentBigo(this.state.text,e.currentTarget.id);\r\n    alert(\"저장하였습니다\")\r\n  }\r\n  makeTestClick = (e) =>{\r\n    const{makeTest} = this.props;\r\n    this.setState({\r\n      isOpen: false,\r\n      alram: true,\r\n      stduuid : e.currentTarget.id\r\n    })\r\n    makeTest(e.currentTarget.id,this.state.start_day,this.state.end_day,this.state.selectcnt,this.state.selectbook)\r\n    \r\n  }\r\n  handle = (e) =>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const {isOpen,data,testlist,testlistloading,noselect,stdlist,stdinfo} = this.state;\r\n    return (\r\n      <Detail delete={this.delete} printImage={this.printImage }makeTestClick={this.makeTestClick} onKeyPress={this.onKeyPress} setSelectedDay={this.setSelectedDay} {...this.state} isOpen={isOpen} openModal2={this.openModal2} closeModal2={this.closeModal2} openModal={this.openModal} closeModal={this.closeModal} handle={this.handle} onsaveClick={this.onsaveClick} testlist={testlist} stdinfo={stdinfo} stdlist={stdlist} testlistloading={testlistloading} data={data} noselect={noselect}\r\n      onToggle={this.onToggle} onClick={this.onClick} />\r\n    );\r\n  }\r\n}\r\nconst formatDate = (current_datetime)=>{\r\n  let formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\r\n  return formatted_date;\r\n}\r\nexport default Container;","import { connect } from \"react-redux\";\r\nimport Container from \"./container\";\r\nimport { actionCreators as wordsActions } from \"../../redux/modules/words\"\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { words:{word,testlist,classlist,studentlist,studentinfo,booklist,statuscode,imgurl,status}, router: { location } } = state;\r\n  return {\r\n    testlist,\r\n    classlist,\r\n    studentlist,\r\n    studentinfo,\r\n    booklist,\r\n    statuscode,\r\n    status,\r\n    imgurl,\r\n    word,\r\n    pathname: location.pathname\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getImgurl : (uuid) => {\r\n      dispatch(wordsActions.getImgurl(uuid));\r\n    }, \r\n    getTestList : (uuid) => {\r\n      dispatch(wordsActions.getTestList(uuid));\r\n    },\r\n    getStudentList : (id) => {\r\n      dispatch(wordsActions.getStudentList(id));\r\n    },\r\n    getClassList : () => {\r\n      dispatch(wordsActions.getClassList());\r\n    },\r\n    getBookList : () => {\r\n      dispatch(wordsActions.getBookList());\r\n    },\r\n    getStudentInfo : (uuid) => {\r\n      dispatch(wordsActions.getStudentInfo(uuid));\r\n    },\r\n    setStudentBigo : (bigo,uuid) => {\r\n      dispatch(wordsActions.setStudentBigo(bigo,uuid));\r\n    },\r\n    makeTest : (uuid,start_day,end_day,percent,book_name) => {\r\n      dispatch(wordsActions.makeTest(uuid,start_day,end_day,percent,book_name));\r\n    },\r\n    setFailWord : (uuid,id) => {\r\n      dispatch(wordsActions.setFailWord(uuid,id));\r\n    },\r\n    deleteTest : (uuid) => {\r\n      dispatch(wordsActions.deleteTest(uuid))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Switch, withRouter } from \"react-router\";\r\nimport \"./styles.module.scss\";\r\nimport Main from \"../Main\";\r\nimport Detail from \"../Detail\";\r\nimport { connect } from \"react-redux\";\r\nconst App = props => [\r\n  <PublicRoutes key={2} />,\r\n];\r\n\r\nconst PublicRoutes = props => (\r\n  <Switch>\r\n      <Route path=\"/test/:testid\" component={Main}/>\r\n      <Route path=\"/\" component={Detail}/>\r\n  </Switch>\r\n);\r\n\r\nApp.propTypes = {\r\n\r\n};\r\n\r\n\r\nexport default withRouter(connect()(App))","import React from \"react\";\r\nimport App from \"./presenter\";\r\n\r\n// TODO: If the user is logged in, call API\r\n\r\nconst Container = props => <App {...props} />;\r\n\r\nexport default Container;","import { connect } from \"react-redux\";\r\nimport Container from \"./container\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { router: { location } } = state;\r\n  return {\r\n    pathname: location.pathname\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Container);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Helmet from 'react-helmet';\nimport {Provider} from \"react-redux\";\nimport store, {history} from \"./redux/configureStore\";\nimport {ConnectedRouter} from \"connected-react-router\";\n\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <Helmet>\n                <title>학생관리시스템</title>\n                <meta name=\"description\" content=\"학생관리시스템\" data-react-helmet=\"true\"/>\n            </Helmet>\n        <ConnectedRouter history={history}>\n        <App />\n       \n        </ConnectedRouter>\n    </Provider>, \n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3h0CR\",\"mainbox\":\"styles_mainbox__3NXXs\",\"topbox\":\"styles_topbox__19ZzX\",\"toptopbox\":\"styles_toptopbox__v6J7y\",\"box\":\"styles_box__1eOAo\",\"infotitle\":\"styles_infotitle__17Yaq\",\"infotext\":\"styles_infotext__35rir\",\"bigo\":\"styles_bigo__YdfD0\",\"newbtn\":\"styles_newbtn__3rDWJ\",\"rbtn\":\"styles_rbtn__20kG9\",\"topbottombox\":\"styles_topbottombox__3v7xF\",\"leftbox\":\"styles_leftbox__1GOEh\",\"rightbox\":\"styles_rightbox__1Nvqz\",\"title\":\"styles_title__1O8oJ\",\"middlebox\":\"styles_middlebox__19lvp\",\"btnbox\":\"styles_btnbox__2OvcM\",\"newbtn2\":\"styles_newbtn2__1Ans8\",\"chartbox\":\"styles_chartbox__7d9kH\",\"stdli\":\"styles_stdli__2rwnR\",\"stdlired\":\"styles_stdlired__3mJi_\",\"btn\":\"styles_btn__3I_FH\",\"logo\":\"styles_logo__6vojr\",\"text\":\"styles_text__3kl37\",\"front\":\"styles_front__1Ov0s\",\"hrsect\":\"styles_hrsect__3DZqj\",\"hrtext\":\"styles_hrtext__3dpBP\",\"selectbox\":\"styles_selectbox__3qaOC\",\"inputbox\":\"styles_inputbox__3s5iv\",\"inputbox2\":\"styles_inputbox2__1FzKK\",\"boxselect\":\"styles_boxselect__3hK2n\",\"react-datepicker__input-container\":\"styles_react-datepicker__input-container__HQFbo\",\"box2\":\"styles_box2__8d5vO\",\"result\":\"styles_result__1ErPU\",\"headerrow\":\"styles_headerrow__1MxKK\",\"headerrowred\":\"styles_headerrowred__d4u0H\",\"bodys\":\"styles_bodys__gJ3Pl\",\"header\":\"styles_header__23qQl\",\"loadingpage\":\"styles_loadingpage__35YmQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__2O2le\",\"top\":\"styles_top__37XO1\",\"logo\":\"styles_logo__30s7n\",\"info\":\"styles_info__1ZECp\",\"line\":\"styles_line__Dbzkf\",\"result\":\"styles_result__1D4ar\",\"headerrow\":\"styles_headerrow__32FA5\",\"headerrowred\":\"styles_headerrowred__2eL2P\",\"bodys\":\"styles_bodys__1lBEx\",\"headerd\":\"styles_headerd__2C-Xr\",\"headern\":\"styles_headern__2mVy2\",\"headerw\":\"styles_headerw__3U9N6\",\"testtable\":\"styles_testtable__2iGrP\"};"],"sourceRoot":""}